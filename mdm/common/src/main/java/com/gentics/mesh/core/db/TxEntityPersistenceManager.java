package com.gentics.mesh.core.db;

import java.util.Iterator;

import com.gentics.mesh.core.data.HibElement;
import com.gentics.mesh.core.data.dao.Dao;

/**
 * A set of low level entity persistence management methods.
 * 
 * @author plyhun
 *
 */
public interface TxEntityPersistenceManager {
	
	/**
	 * Create a new persisted entity with the given optional uuid. 
	 * If uuid parameter is null, a new generated UUID will be used.<br>
	 * 
	 * @param <T>
	 * @param uuid 
	 * @param classOfT the persistence class to use
	 * @return
	 */
	<T extends HibElement> T create(String uuid, Class<? extends T> classOfT);
	
	/**
	 * Merge the data from given POJO into the persistent entity.<br>
	 * 
	 * @param element
	 * @param classOfT the persistence class to use
	 * @return
	 */
	<T extends HibElement> T persist(T element, Class<? extends T> classOfT);
	
	/**
	 * Delete the persistent entity.<br>
	 * 
	 * @param element
	 * @param classOfT the persistence class to use
	 */
	<T extends HibElement> void delete(T element, Class<? extends T> classOfT);

	/**
	 * Count the entities of a given type in the persistent storage.<br>
	 * 
	 * @param classOfT the persistence class to use
	 */
	<T extends HibElement> long count(Class<? extends T> classOfT);
	
	/**
	 * Load the persisted entity by its database record ID.<br>
	 * 
	 * @param <T>
	 * @param id database record ID
	 * @param classOfT the persistence class to use
	 * @return
	 */
	<T extends HibElement> T load(Object id, Class<? extends T> classOfT);
	
	/**
	 * Load the all persisted entities of an end type.<br>
	 * 
	 * @param <T> API domain entity class
	 * @param <B> implementation persistent entity class
	 * @param classOfT the persistence class to use
	 * @return
	 */
	<T extends HibElement, B extends T> Iterator<T> loadAll(Class<B> classOfT);

	/**
	 * Create a new persisted entity with the autogenerated uuid.
	 * Prefer {@link TxEntityPersistenceManager#create(String, Dao)} over this method, 
	 * to keep the creation business logic. This API method serves test purposes.
	 * 
	 * @param <T>
	 * @param classOfT
	 * @return
	 */
	default <T extends HibElement> T create(Class<? extends T> classOfT) {
		return create(null, classOfT);
	}
}
