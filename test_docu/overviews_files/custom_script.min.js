
document.addEventListener("DOMContentLoaded",function(){const toggleButton=document.querySelector(".navbar-toggler");const sidebarMenu=document.getElementById("sidebarMenu");toggleButton.addEventListener("click",function(){sidebarMenu.classList.toggle("show")})});

(() => {
    const CLASS_OPEN_VERSION = 'open';
    document.querySelectorAll('.versions-switch').forEach(container => {
        const entries = container.querySelector('.version-entries');

        container.querySelector('.current-version').addEventListener('click', event => {
            event.preventDefault();
            event.stopPropagation();
            event.stopImmediatePropagation();

            entries.classList.toggle(CLASS_OPEN_VERSION);
        });

        // If we click somewhere else, we have to close the "dropdown".
        // The click event we want to listen for is already canceled, so it doesn't interfere with this.
        document.addEventListener('click', () => {
            entries.classList.remove(CLASS_OPEN_VERSION);
        });
    });

    const accordions = document.querySelectorAll('.accordion-item');

    for (const item of accordions) {
        const header = item.querySelector('.accordion-header');
        const content = item.querySelector('.accordion-content');
        const name = header.querySelector('.header-name');
        const copyBtn = header.querySelector('.copy-button');
        
        header.addEventListener('click', event => {
            // Ignore clicks to buttons or other content in the header
            if (event.target !== header && event.target !== name) {
                return;
            }

            content.classList.toggle('open');
        });

        if (copyBtn != null) {
            copyBtn.addEventListener('click', event => {
                event.preventDefault();
                event.stopPropagation();

                const value = content.innerText;
                try {
                    navigator.clipboard.writeText(value);
                } catch (err) {
                    // Fallback
                    const area = document.createElement('textarea');
                    area.value = value;
                    document.body.append(area);
                    area.focus();
                    area.select();

                    try {
                        document.execCommand('copy');
                    } catch (ignored) {}

                    area.remove();
                }
            });
        }
    }
})();
