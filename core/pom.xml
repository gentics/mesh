<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>mesh-core</artifactId>
	<packaging>jar</packaging>
	<name>Mesh - Core</name>

	<parent>
		<groupId>com.gentics.mesh</groupId>
		<artifactId>mesh</artifactId>
		<version>1.6.23</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mesh.version>${project.version}</mesh.version>
		<skip.test-plugins>true</skip.test-plugins>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.gentics.mesh</groupId>
				<artifactId>mesh-bom</artifactId>
				<type>pom</type>
				<scope>import</scope>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<!-- Internal dependencies -->
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>${mesh.database.provider}</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-common</artifactId>
		</dependency>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-distributed</artifactId>
		</dependency>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-distributed-coordinator</artifactId>
		</dependency>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-elasticsearch</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-graphql</artifactId>
		</dependency>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-rest-client</artifactId>
		</dependency>

		<!-- Common Tools -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<!-- Default storage provider -->
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-service-local-storage</artifactId>
		</dependency>

		<!-- Default image provider -->
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>${mesh.image.provider}</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- OAuthHandler -->
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-service-jwt-auth</artifactId>
		</dependency>

		<!-- Attachment parsing -->
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
		</dependency>

		<!-- Metrics -->
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-service-metrics-prometheus</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<!-- Changelog system -->
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-changelog-system</artifactId>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-codegen</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-hazelcast</artifactId>
			<!-- Use the specified hazelcast version instead -->
			<exclusions>
				<exclusion>
					<groupId>com.hazelcast</groupId>
					<artifactId>hazelcast</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Hazelcast -->
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast-kubernetes</artifactId>
		</dependency>

		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-mail-client</artifactId>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Dagger -->
		<dependency>
			<groupId>com.google.dagger</groupId>
			<artifactId>dagger</artifactId>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-common</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-rest-model</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-test-common</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-api</artifactId>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>${mesh.database.provider}</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.dagger</groupId>
			<artifactId>dagger-compiler</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Default S3 storage provider -->
		<dependency>
			<groupId>com.gentics.mesh</groupId>
			<artifactId>mesh-service-aws-s3-storage</artifactId>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<artifactId>maven-invoker-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<?m2e ignore ?>
						<id>build-test-projects</id>
						<goals>
							<goal>run</goal>
						</goals>
						<!-- Before the test phase -->
						<phase>process-test-classes</phase>
						<configuration>
							<skipInvocation>${skip.test-plugins}</skipInvocation>
							<properties>
								<mesh.version>${project.version}</mesh.version>
								<skipTests>true</skipTests>
							</properties>
							<!-- Somehow invalid build hook are configured -->
							<postBuildHookScript>/bin/true</postBuildHookScript>
							<preBuildHookScript>/bin/true</preBuildHookScript>
							<projectsDirectory>src/test/plugins</projectsDirectory>
							<cloneProjectsTo>${project.build.directory}/test-plugins</cloneProjectsTo>
							<pomIncludes>
								<pomInclude>pom.xml</pomInclude>
							</pomIncludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>jar</id>
						<configuration>
							<excludePomFiles>true</excludePomFiles>
							<archive>
								<manifest>
									<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
									<mainClass>com.gentics.mesh.cli.Mesh</mainClass>
								</manifest>
								<manifestEntries>
									<url>${project.url}</url>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.google.dagger</groupId>
						<artifactId>dagger-compiler</artifactId>
						<version>${dagger.version}</version>
						<optional>true</optional>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>
											jacoco-maven-plugin
										</artifactId>
										<versionRange>
											[0.7.2.201409121644,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
