---
title: Gentics Mesh Cookbook
---

:icons: font
:source-highlighter: prettify
:toc:

== Chapters

=== I - Introduction

This document aims to provide you with suggestions and hints on how to deal with typical web development tasks. Each chapter will provide you with examples and show you how Gentics Mesh can help you tackle these tasks.

=== II - Content

Handling contents is fairly easy. You can either identify and load content using the UUIDs or a regular web path. 

By Path: https://demo.getmesh.io/api/v1/demo/webroot/yachts/indian-empress

By Uuid: https://demo.getmesh.io/api/v1/demo/nodes/079ae5d5467447b99ae5d5467447b934

You can either place the path or uuid to your content in a fragment `/demo#category/079ae5d5467447b99ae5d5467447b934` or in the regular web path `/demo/category/079ae5d5467447b99ae5d5467447b934`. Most modern single page application frameworks like angular or react support both variations.

If you choose to use a server side webframework like link:https://laravel.com/[Laravel] or link:https://expressjs.com/de/[Express] you can setup routes to handle the inbound request. The request path can be used to build the webroot path for Gentics Mesh. Using that path you can query Gentics Mesh and check whether content for the given path can be found.

=== III - Images

Images can be loaded similar to regular contents. It is possible to load them using the path or the uuid:

TIP: By Path: https://demo.getmesh.io//api/v1/demo/webroot/images/ford-gt.jpg?w=500

image::https://demo.getmesh.io//api/v1/demo/webroot/images/ford-gt.jpg?w=500[Image By Path]


TIP: By Uuid: https://demo.getmesh.io/api/v1/demo/nodes/df8beb3922c94ea28beb3922c94ea2f6/binary/image?w=500

image::https://demo.getmesh.io/api/v1/demo/nodes/df8beb3922c94ea28beb3922c94ea2f6/binary/image?w=500[Image by Uuid]

==== Placeholders

NOTE: You can use the `dominantColor`, `width` and `height` properties of the image fields to generate colored placeholder areas for your images. The `dominantColor` of the image will  automatically be computed for each uploaded image.

===== Responsive Design

You can use the focal point feature to mark the point of interest in your images. That information can be used to generate different size sets of your images. Different image sizes may be required by your responsive design. The focal point will be used by Gentics Mesh to crop the image in the desired way.

image::https://demo.getmesh.io/api/v1/demo/nodes/df8beb3922c94ea28beb3922c94ea2f6/binary/image?w=600&h=300&crop=fp&fpdebug=true[Image with FP]

image::https://demo.getmesh.io/api/v1/demo/nodes/df8beb3922c94ea28beb3922c94ea2f6/binary/image?w=200&h=200&crop=fp&fpdebug=true[Image with FP]


image::https://demo.getmesh.io/api/v1/demo/nodes/df8beb3922c94ea28beb3922c94ea2f6/binary/image?w=100&h=300&crop=fp&fpdebug=true[Image with FP]



=== IV - Binaries

=== V - Search

Adding a search feature often starts as a simple requirement which specifies that the content should be searchable. There are however various aspects of the search that need to be highlighted in order to implement the search.

==== Autocompletion

TIP: Do you want to suggest completions while the user enters the query in the search bar?

==== Did You Mean

TIP: Do you want to auto correct the search query and provide the user with an alternative search query?

==== Autosuggest

TIP: Do you want to suggest full query phrases to the user?

==== Result Highlighting

TIP: Should the result page contain excerpts of the found content?

==== Filtering

TIP: Can the user of your site specify additional filters? (e.g.: author, category)

==== Search Index Tuning

==== Search in Uploads

TIP: Do you want to be able to search within contents of uploaded documents? (e.g.: PDF, DOC, DOCX)

Any uploaded file will automatically be processed if the `ingest-attachment` plugin has been installed in elasticsearch. You can use this Dockerfile to prepare your Elasticsearch server.

```
FROM elasticsearch:6.4.1

RUN bin/elasticsearch-plugin install -b ingest-attachment
EXPOSE 9200
EXPOSE 9300
```

=== VI - Like & Comment



=== VII - Storing Data

=== VIII - Login

=== IX - User data

=== X - Content Staging

=== XI - Links

=== XII - Sitemap

=== XIII - Caching

==== User permissions

Sometimes it might not be important which roles a user has exactly, but only that they did not change since the last time they were checked. For this purpose the https://getmesh.io/docs/api/#users__get_response[user response] contains the `rolesHash`, which is a CRC32 hash of all the users roles.
